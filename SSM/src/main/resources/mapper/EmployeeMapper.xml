<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ts.ssm.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.ts.ssm.pojo.Employee">
    <id column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="emp_name" jdbcType="VARCHAR" property="empName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
  </resultMap>
  <sql id="Base_Column_List">
    emp_id, emp_name, email, gender, dept_id
  </sql>
  
  <sql id="WithDept_Column_List">
  	e.emp_id, e.emp_name, e.email, e.gender, d.dept_id, d.dept_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_emp
    where emp_id = #{empId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tbl_emp
    where emp_id = #{empId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ts.ssm.pojo.Employee">
    insert into tbl_emp (emp_id, emp_name, email, 
      gender, dept_id)
    values (#{empId,jdbcType=INTEGER}, #{empName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{gender,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ts.ssm.pojo.Employee">
    insert into tbl_emp
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        emp_id,
      </if>
      <if test="empName != null">
        emp_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="empName != null">
        #{empName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ts.ssm.pojo.Employee">
    update tbl_emp
    <set>
      <if test="empName != null">
        emp_name = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
    </set>
    where emp_id = #{empId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ts.ssm.pojo.Employee">
    update tbl_emp
    set emp_name = #{empName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      dept_id = #{deptId,jdbcType=INTEGER}
    where emp_id = #{empId,jdbcType=INTEGER}
  </update>
  
  
  <resultMap type="com.ts.ssm.pojo.Employee" id="WithDeptResultMap">
  	 	<id column="emp_id" jdbcType="INTEGER" property="empId" />
	    <result column="emp_name" jdbcType="VARCHAR" property="empName" />
	    <result column="email" jdbcType="VARCHAR" property="email" />
	    <result column="gender" jdbcType="INTEGER" property="gender" />
	    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
	    
	    <association property="department" javaType="com.ts.ssm.pojo.Department">
	    	<id column="dept_id" property="deptId"/>
	    	<result column="dept_name" property="deptName"/>
	    </association>
  </resultMap>
  <select id="selectByPrimaryKeyWithDept" resultMap="WithDeptResultMap">
  	select
  	<include refid="WithDept_Column_List"></include>
  	from tbl_emp e 
  	left join tbl_dept d
  	on e.dept_id = d.dept_id
  	 where e.emp_id = #{empId,jdbcType=INTEGER}
  </select>
  
  <select id="selectAllWithDept" resultMap="WithDeptResultMap">
	  	select
	  	<include refid="WithDept_Column_List"></include>
	  	from tbl_emp e 
	  	left join tbl_dept d
	  	on e.dept_id = d.dept_id
	  	<where>
			<if test="empId !=null and empId !=0" >
				and e.emp_id = #{empId}
			</if>
			<if test="empName != null and empName !=''">
				and e.emp_name like concat('%',#{empName},'%')
			</if>
			<if test="email != null and email != ''">
				and e.email like concat('%',#{email},'%')
			</if>
	  	</where>
	  	order by e.emp_id asc
  </select>
  
  <select id="selectByName" resultType="int">
  	select count(1) from tbl_emp where emp_name = #{empName}
  </select>
  
  <delete id="deleteBatch">
  	delete from tbl_emp
  	<foreach collection="empIds" item="empId" open="where emp_id in ("
  		close=")" separator=",">
  		#{empId}	
  	</foreach>
  </delete>
</mapper>