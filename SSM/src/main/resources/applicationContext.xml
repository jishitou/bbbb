<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	
	<!-- 配置扫描注解的包，同时不扫描控制器 -->
	<context:component-scan base-package="com.ts.ssm">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<!-- ============================================ -->
	
	
	<!-- 引入外部数据库链接信息文件，并配置数据源 -->
	<context:property-placeholder location="classpath:dbconfig.properties"/>
	<!-- ================配置数据源================== -->
	<bean id="comboPooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	<!-- ========================================================= -->
	
	
	<!-- ================配置mybatis的整合=================== -->
	<!-- 配置sqlsessionfactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 配置mybatis的全局配置文件的位置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- 配置mapper映射问价的位置 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
		<!-- 配置数据源 -->
		<property name="dataSource" ref="comboPooledDataSource"></property>
	</bean>
	
	<!-- 将mapper接口的实现类注入到spring的ioc容器中 -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 将所有dao接口的实现加入到ioc容器中 -->
		<property name="basePackage" value="com.ts.ssm.dao"></property>
	</bean>
	
	<!-- 配置进行批量处理的sqlsession -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
		<constructor-arg name="executorType" value="BATCH"></constructor-arg>
	</bean>
	
	<!-- ========================================================= -->
	
	
	<!-- ========================配置事务管理====================== -->
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="comboPooledDataSource"></property>
	</bean>
	
	<!-- 配置aop -->
	<aop:config>
		<!-- 
			配置切点
			该表达式：com.ts.ssm.service包及其子包的所有类的所有方法
		-->
		<aop:pointcut expression="execution(* com.ts.ssm.service..*(..))" id="txPointCut"/>
		<!-- 配置增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
	</aop:config>
	<!-- 配置事务增强如何切入 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 
				*:表示所有的方法都是事务方法
				get*:所有以get开头的方法都需要处理
			 -->
			<tx:method name="*"/>
			<tx:method name="get*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
</beans>